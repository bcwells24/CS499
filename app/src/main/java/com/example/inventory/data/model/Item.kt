package com.example.inventory.data.model

import java.util.UUID

/**
 * Represents an inventory item stored in Firestore.
 *
 * @property id         A unique identifier for this item (auto-generated by default).
 * @property name       The name or label of the item.
 * @property quantity   The quantity of this item currently in stock.
 * @property dateAdded  A record of when this item was added (stored as a String date).
 */
data class Item(
    val id: String = UUID.randomUUID().toString(), // Generate a unique ID for Firestore
    val name: String = "",
    var quantity: Int = 0,
    val dateAdded: String = ""
) {
    /**
     * A no-argument constructor required by Firestore for deserialization.
     * This calls the primary constructor with default values.
     */
    constructor() : this("", "", 0, "")

    /**
     * Ensures the quantity is never set to a negative number.
     * If the requirement is not met, an IllegalArgumentException is thrown.
     */
    init {
        require(quantity >= 0) { "Quantity cannot be negative" }
    }
}

/** Reference: https://firebase.google.com/docs/firestore/manage-data/add-data */
